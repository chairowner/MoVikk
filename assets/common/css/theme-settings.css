:root {
    /* обычный для текста */
    --main-font-size: 15px;
    --main-color: #242426;
    --main-background: #F3F3F3;

    /* основной */
    --primary-color: #75C7CC;
    --primary-hover-color: #5c9fa3;
    --primary-active-color: #538183;

    --primary-color-light: #a1dbde;
    --primary-hover-color-light: #c8e9eb;

    /* дополнительный */
    --addition-color: #1A6B70;
    --addition-hover-color: #285e60;
    --addition-active-color: #194648;

    /* второстепенный */
    --secondary-color: #75b4cc;
    --secondary-hover-color: #6095aa;
    --secondary-active-color: #3f7083;

    /* цвет ошибки */
    --error-color: #931313;
    --error-hover-color: #a13a3a;
    --error-active-color: #741515;

    /* цвет ошибки light */
    --error-color-light: #f30000;
    --error-hover-color-light: #e62727;
    --error-active-color-light: #b80000;

    /* цвет успешной операции */
    --success-color: #0b841f;
    --success-hover-color: #2d8e35;
    --success-active-color: #156624;
}

p.primary, a.primary, span.primary {
    color: var(--primary-color);
}
p.primary:hover, a.primary:hover, span.primary:hover {
    color: var(--primary-hover-color);
}
p.primary:active, a.primary:active, span.primary:active {
    color: var(--primary-active-color);
}
p.addition, a.addition, span.addition {
    color: var(--addition-color);
}
p.addition:hover, a.addition:hover, span.addition:hover {
    color: var(--addition-hover-color);
}
p.addition:active, a.addition:active, span.addition:active {
    color: var(--addition-active-color);
}
p.secondary, a.secondary, span.secondary {
    color: var(--secondary-color);
}
p.secondary:hover, a.secondary:hover, span.secondary:hover {
    color: var(--secondary-hover-color);
}
p.secondary:active, a.secondary:active, span.secondary:active {
    color: var(--secondary-active-color);
}
p.error, a.error, span.error {
    color: var(--error-color);
}
p.error-light, a.error-light, span.error-light {
    color: var(--error-color-light);
}
p.error:hover, a.error:hover, span.error:hover {
    color: var(--error-hover-color);
}
p.error-light:hover, a.error-light:hover, span.error-light:hover {
    color: var(--error-hover-color-light);
}
p.error:active, a.error:active, span.error:active {
    color: var(--error-active-color);
}
p.error-light:active, a.error-light:active, span.error-light:active {
    color: var(--error-active-color-light);
}
p.success, a.success, span.success {
    color: var(--success-color);
}
p.success:hover, a.success:hover, span.success:hover {
    color: var(--success-hover-color);
}
p.success:active, a.success:active, span.success:active {
    color: var(--success-active-color);
}

.button {
    min-width: 150px;
    width: fit-content;
    height: 45px;
    padding: 0 15px;
    color: white;
    font-size: 14px;
    border-radius: 6px;
    transition: all .2s ease-in-out;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    outline: none;
    border: none;
}
.button, .button.primary {
    color: white;
    background-color: var(--primary-color);
}
    .button.primary:hover,
    .button:hover {
        color: white;
        background-color: var(--primary-hover-color);
    }
    .button.primary:active,
    .button:active {
        color: white;
        background-color: var(--primary-active-color);
    }
.button.addition {
    color: white;
    background-color: var(--addition-color);
}
    .button.addition:hover {
        color: white;
        background-color: var(--addition-hover-color);
    }
    .button.addition:active {
        color: white;
        background-color: var(--addition-active-color);
    }
.button.secondary {
    color: white;
    background-color: var(--secondary-color);
}
    .button.secondary:hover {
        color: white;
        background-color: var(--secondary-hover-color);
    }
    .button.secondary:active {
        color: white;
        background-color: var(--secondary-active-color);
    }
.button.error {
    color: white;
    background-color: var(--error-color);
}
    .button.error:hover {
        color: white;
        background-color: var(--error-hover-color);
    }
    .button.error:active {
        color: white;
        background-color: var(--error-active-color);
    }
.button.success {
    color: white;
    background-color: var(--success-color);
}
    .button.success:hover {
        color: white;
        background-color: var(--success-hover-color);
    }
    .button.success:active {
        color: white;
        background-color: var(--success-active-color);
    }

.button.elems {display: flex; justify-content: space-between;}

.button img {
    pointer-events: none;
}
.button > * {cursor: pointer!important;}

.field {
    width: 150px;
    height: 45px;
    padding: 0 15px;
    border-radius: 6px;
    transition: all .2s ease-in-out;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: text;
    outline: none;
    border: none;
}
.field, .field.primary {
    border: 2px solid var(--primary-color);
    color: var(--main-color);
}
    .field:hover, .field:focus
    .field.primary:hover, .field.primary:focus {
        border-color: var(--primary-hover-color);
    }
    .field:active,
    .field.primary:active {
        border-color: var(--primary-active-color);
    }
.field.error {
    border: 2px solid var(--error-color);
    color: var(--main-color);
}
    .field.error:hover, .field.error:focus {
        border-color: var(--error-hover-color);
    }
    .field.error:active {
        border-color: var(--error-active-color);
    }
.field.success {
    border: 2px solid var(--success-color);
    color: var(--main-color);
}
    .field.success:hover, .field.success:focus {
        border-color: var(--success-hover-color);
    }
    .field.success:active {
        border-color: var(--success-active-color);
    }

.field.elems {display: flex; justify-content: space-between;}
.field > * {cursor: text!important;}

textarea.field {
    padding: 13px 15px;
    height: 100px;
	resize: none;
}

.alert {
    width: 100%;
    white-space: pre-wrap;
    word-break: break-all;
    min-width: 150px;
    width: fit-content;
    height: 45px;
    padding: 0 15px;
    border-radius: 8px;
    transition: all .2s ease-in-out;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    outline: none;
    border: none;
    color: white;
}
.alert, .alert.primary {
    background-color: var(--primary-color);
}
.alert.addition {
    background-color: var(--addition-color);
}
.alert.secondary {
    background-color: var(--secondary-color);
}
.alert.error {
    background-color: var(--error-color);
}
.alert.success {
    background-color: var(--success-color);
}

input::-webkit-input-placeholder       {opacity: 1; transition: opacity 200ms ease-in-out;}
input::-moz-placeholder                {opacity: 1; transition: opacity 200ms ease-in-out;}
input:-moz-placeholder                 {opacity: 1; transition: opacity 200ms ease-in-out;}
input:-ms-input-placeholder            {opacity: 1; transition: opacity 200ms ease-in-out;}
input:focus::-webkit-input-placeholder {opacity: 0; transition: opacity 200ms ease-in-out;}
input:focus::-moz-placeholder          {opacity: 0; transition: opacity 200ms ease-in-out;}
input:focus:-moz-placeholder           {opacity: 0; transition: opacity 200ms ease-in-out;}
input:focus:-ms-input-placeholder      {opacity: 0; transition: opacity 200ms ease-in-out;}

/* для элемента input c type="radio" */
.radioInp {
    position: absolute;
    z-index: -1;
    opacity: 0;
    cursor: pointer;
    transition: all 200ms ease-in-out;
}
/* для элемента label связанного с .radioInp */
.radioInp+label {
    display: inline-flex;
    align-items: center;
    user-select: none;
    cursor: pointer;
    transition: all 200ms ease-in-out;
}
/* создание в label псевдоэлемента  before со следующими стилями */
.radioInp+label::before {
    content: '';
    display: inline-block;
    width: 1em;
    height: 1em;
    flex-shrink: 0;
    flex-grow: 0;
    border: 2px solid var(--primary-color);
    border-radius: 50%;
    margin-right: 0.5em;
    background-repeat: no-repeat;
    background-position: center center;
    background-size: 50% 50%;
    transition: all 200ms ease-in-out;
}
/* стили при наведении курсора на радио */
.radioInp:not(:disabled):not(:checked)+label:hover::before {
    border-color: var(--primary-color-light);
}
/* стили для активной радиокнопки (при нажатии на неё) */
.radioInp:not(:disabled):active+label::before {
    border-color: var(--primary-color-light);
    background-color: var(--primary-hover-color-light);
}
/* стили для радиокнопки, находящейся в фокусе */
/* .radioInp:focus+label::before {
    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
} */
/* стили для радиокнопки, находящейся в фокусе и не находящейся в состоянии checked */
.radioInp:focus:not(:checked)+label::before {
    border-color: var(--primary-hover-color);
}
/* стили для радиокнопки, находящейся в состоянии checked */
.radioInp:checked+label::before {
    border-color: var(--primary-color);
    background-color: var(--primary-color);
    background-size: 11px;
    background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="white" d="M470.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L192 338.7 425.4 105.4c12.5-12.5 32.8-12.5 45.3 0z"/></svg>');
}
/* стили для радиокнопки, находящейся в состоянии disabled */
.radioInp:disabled+label::before {
    background-color: #e9ecef;
}

/* https://codepen.io/sosuke/pen/Pjoqqp */
.fill-primary {filter: invert(78%) sepia(31%) saturate(450%) hue-rotate(135deg) brightness(89%) contrast(90%);}
.fill-addition {filter: invert(32%) sepia(47%) saturate(712%) hue-rotate(135deg) brightness(94%) contrast(86%);}
.fill-secondary {filter: invert(72%) sepia(6%) saturate(2351%) hue-rotate(151deg) brightness(94%) contrast(85%);}
.fill-error {filter: invert(72%) sepia(6%) saturate(2351%) hue-rotate(151deg) brightness(94%) contrast(85%);}
.fill-success {filter: invert(32%) sepia(96%) saturate(650%) hue-rotate(86deg) brightness(95%) contrast(95%);}
.fill-white {filter: invert(100%) sepia(1%) saturate(2%) hue-rotate(333deg) brightness(105%) contrast(101%);}